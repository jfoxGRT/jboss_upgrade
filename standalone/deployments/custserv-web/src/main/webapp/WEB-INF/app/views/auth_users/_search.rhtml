<%= javascript_include_tag "jquery/tabletools/TableTools.min.js" %>
<%= javascript_include_tag "jquery/tabletools/plugins/tabletools.download.min.js" %>
<%= javascript_include_tag "jquery/jquery_shared_utilities.min.js" %>
<%= stylesheet_link_tag "jquery/tabletools/TableTools.css" %>
<script>
jQuery(document).ready(function() {
    jQuery('#results_table').dataTable({
        "aaSorting": [[0, "desc"]],
        "oLanguage": {
            "oPaginate": {
                "sNext": "",
                "sPrevious": ""
             },
             "sEmptyTable": "No Auth Users match the Finder search criteria.",
             "sZeroRecords": "No Auth Users match the filter criteria."
        },
        "sDom": 'T<"clear">lfrtip',
        "oTableTools": {
          "sSwfPath": "<%= DATATABLES_SWF_PATH %>copy_csv_xls_pdf_custom.swf",
          "aButtons": [
            <% # if result set is small enough, use built-in tabletools CSV generation. make request to
               # server iff not all results were delivered to the DataTable. we don't have back end handling
               # for XLS and PDF.
               if @num_rows_reported < FINDER_LIMIT %>
            {
              "sExtends": "copy",
              "fnCellRender": function ( sValue, iColumn, nTr, iDataIndex ) {
                return convertHTMLBreaks(getCleanedText(sValue));
              }
            },
            {
              "sExtends": "csv",
              "sFileName": "<%= AUTH_USER_FINDER_RESULTS_FILENAME %>.csv",
              "fnCellRender": function ( sValue, iColumn, nTr, iDataIndex ) {
                return convertHTMLBreaks(getCleanedText(sValue));
              }
            },
            {
              "sExtends": "xls",
              "sFileName": "<%= AUTH_USER_FINDER_RESULTS_FILENAME %>.xls",
              "sButtonText": "XLS",
              "fnCellRender": function ( sValue, iColumn, nTr, iDataIndex ) {
                return convertHTMLBreaks(getCleanedText(sValue));
              }
            },
            {
    					"sExtends": "pdf",
    					"sPdfOrientation": "landscape",
              "sFileName": "<%= AUTH_USER_FINDER_RESULTS_FILENAME %>.pdf",
              "sTitle": "<%= AUTH_USER_FINDER_RESULTS_FILENAME %>",
              "fnCellRender": function ( sValue, iColumn, nTr, iDataIndex ) {
                return convertHTMLBreaks(getCleanedText(sValue));
              }
    				},
            "print"
            <% else %>
            {
              "sExtends": "text",
              "sButtonText": "Copy",
              "sToolTip": "Too many results to copy."
            },
            {
              "sExtends": "download",
              "sButtonText": "CSV",
              "sUrl": "<%= APP_CONTEXT_PATH %>/auth_users/export_auth_users_search_to_csv"
            },
            {
              "sExtends": "text",
              "sButtonText": "XLS",
              "sToolTip": "Too many results for XLS export."
            },
            {
              "sExtends": "text",
              "sButtonText": "PDF",
              "sToolTip": "Too many results for PDF export."
            },
            {
              "sExtends": "text",
              "sButtonText": "Print",
              "sToolTip": "Too many results to print."
            }
            <% end %>
    		]
  		}
    });
} );

</script>
<%= hidden_field_tag(:pull_the_blinds, "1") %>
<%= render(:partial => "common/search_header", :locals => { :report_title => "SAMC - Auth Users Search Results" })%>
<% if (@errors.length < 1) %> 
	<table class="data_table filterable_table" id="results_table" align="left">
	  <thead>
	    <tr class="data_table_first_row">
	      <th>Auth User ID</th>
	      <th>Username</th>
	      <th>Type</th>
	      <th>UUID</th>
	      <th>Created</th>
	      <th>Last Updated</th>
	      <th>Profile Merge</th>
	      <th>SAM Customer ID</th>
	      <th>SAM Servers</th>
	    </tr>
	  </thead>
	  <tbody>
	    <%= render(:partial => "auth_users/auth_users_search_result", :collection => @auth_users) %>
	  </tbody>
	</table>    
<% end %>